{"version":3,"sources":["components/sidebar.jsx","components/Dashboard.jsx","App.js","index.js"],"names":["Sidebar","props","database","map","data","Card","style","width","padding","marginTop","Header","name","ListGroup","className","ListGroupItem","row1","row2","row3","description","languages","Dashboard","Container","fluid","Row","Col","xs","id","src","alt","App","Navbar","bg","expand","Brand","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QA4DiBA,EApDD,SAAAC,GAEZ,OAAOC,EAASC,KAAI,SAAAC,GACpB,OACI,mCAEH,eAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,QAASC,QAAS,MAAOC,UAAW,OAA1D,UACA,cAACJ,EAAA,EAAKK,OAAN,UAAcN,EAAKO,OAOtB,eAACC,EAAA,EAAD,CAAWC,UAAU,mBAArB,UACE,cAACC,EAAA,EAAD,UAAgBV,EAAKW,OACrB,cAACD,EAAA,EAAD,UAAgBV,EAAKY,OACrB,cAACF,EAAA,EAAD,UAAgBV,EAAKa,OACrB,cAACH,EAAA,EAAD,UAAgBV,EAAKc,0BAoCrBhB,EAAW,CACX,CACES,KAAM,gBACNI,KAAM,yBACNC,KAAM,yBACNC,KAAM,0BACNC,YAAa,gBACbC,UAAW,0BCrCAC,EA1BC,SAAAnB,GAGd,OACK,cAACoB,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACO,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAG,kBAAf,qCAOhB,qBAAKb,UAAU,QAAQc,IAA8B,aAAcC,IAAI,YAEvD,cAACJ,EAAA,EAAD,CAAMC,GAAI,EAAGC,GAAG,uBAAhB,SACI,cAACH,EAAA,EAAD,UACA,cAAC,EAAD,cCITM,MAjBf,WACE,OACE,gCACA,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACF,cAAEX,EAAA,EAAF,UACE,eAACS,EAAA,EAAOG,MAAR,CAAcC,KAAK,QAAnB,cAA4B,yDAA5B,IAA6D,6DAOjE,cAAC,EAAD,Q,MCfAC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.aa4be9f6.chunk.js","sourcesContent":["import React from \"react\";\n//import {Nav} from \"react-bootstrap\";\nimport {ListGroup} from \"react-bootstrap\";\nimport {ListGroupItem} from \"react-bootstrap\";\nimport {Card} from \"react-bootstrap\";\nimport './Dashboard.css'\n\n\nconst Sidebar = props => {\n   \n    return database.map(data => {\n    return (\n        <>\n        \n     <Card style={{ width: '18rem', padding: '0px', marginTop: '5px' }}>\n     <Card.Header>{data.name}</Card.Header>\n  {/* <Card.Body>\n    <Card.Text>\n      Some quick example text to build on the card title and make up the bulk of\n      the card's content.\n    </Card.Text>\n  </Card.Body> */}\n  <ListGroup className=\"list-group-flush\">\n    <ListGroupItem>{data.row1}</ListGroupItem>\n    <ListGroupItem>{data.row2}</ListGroupItem>\n    <ListGroupItem>{data.row3}</ListGroupItem>\n    <ListGroupItem>{data.description}</ListGroupItem>\n  </ListGroup>\n  {/* <Card.Body>\n    <Card.Link href=\"#\">Card Link</Card.Link>\n    <Card.Link href=\"#\">Another Link</Card.Link>\n  </Card.Body> */}\n</Card>\n</>\n\n            // <Nav className=\"col-md-12 d-none d-md-block bg-light sidebar\"\n            // activeKey=\"/home\"\n            // onSelect={selectedKey => alert(`selected ${selectedKey}`)}\n            // >\n            //     <div className=\"sidebar-sticky\"></div>\n            // <Nav.Item>\n            //     <Nav.Link href=\"/home\">Active</Nav.Link>\n            // </Nav.Item>\n            // <Nav.Item>\n            //     <Nav.Link eventKey=\"link-1\">Link</Nav.Link>\n            // </Nav.Item>\n            // <Nav.Item>\n            //     <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\n            // </Nav.Item>\n            // <Nav.Item>\n            //     <Nav.Link eventKey=\"disabled\" disabled>\n            //     Disabled\n            //     </Nav.Link>\n            // </Nav.Item>\n            // </Nav>\n          \n        );\n})\n  };\n  //const Sidebar = withRouter(Side);\n  export default Sidebar\n\nlet database = [\n    {\n      name: 'Personal Info',\n      row1: 'Phone: ***************',\n      row2: 'Email: ***************',\n      row3: 'LinkedIn: *************',\n      description: 'Group project',\n      languages: 'HTML, CSS, JavaScript'\n    }\n    // },\n    // {\n    //   name: 'Skills',\n    //   row1: 'J2EE Spring',\n    //   row2: 'Java  Golang',\n    //   row3: 'Python React',\n    //   description: 'Java  Golang',\n    //   languages: 'PHP, SQL'\n    // }\n  ]","import React from \"react\";\nimport {Container, Row, Col } from \"react-bootstrap\";\n//import { Image, StyleSheet } from 'react';\nimport Sidebar from \"./sidebar\";\nimport './Dashboard.css'\n\nconst Dashboard = props => {\n   \n\n    return (\n         <Container fluid>\n                <Row>\n                    <Col xs={9} id=\"sidebar-wrapper\">      \n                   \n                      {/* <Button as={Col} variant=\"primary\">Button #1</Button>\n  <Button as={Col} variant=\"secondary\" className=\"mx-2\">Button #2</Button>\n    <Button as={Col} variant=\"success\">Button #3</Button> */}\n    Java is a funny language \n    {/* <img src=\"/image.png\" alt=\"java\" /> */}\n    <img className=\"photo\" src={process.env.PUBLIC_URL + '/image.png'} alt=\"java\" /> \n                    </Col>\n                    <Col  xs={3} id=\"page-content-wrapper\">\n                        <Row>\n                        <Sidebar />\n</Row>\n                    </Col> \n                </Row>\n\n            </Container>\n        );\n  };\n  //const Dashboard = withRouter(Dash);\n  export default Dashboard \n\n","//import logo from './logo.svg';\n//import './App.css';\nimport { Navbar } from 'react-bootstrap';\n//import { Nav } from 'react-bootstrap';\n\n//import { NavDropdown } from 'react-bootstrap';\nimport { Container } from 'react-bootstrap';\nimport Dashboard from './components/Dashboard';\n\n\nfunction App() {\n  return (\n    <div>\n    <Navbar bg=\"light\" expand=\"lg\">\n  < Container>\n    <Navbar.Brand href=\"#home\"> <h5> Dinesh Kumar Elangovan</h5> <h6>Full Stack Developer</h6>\n\n    </Navbar.Brand>\n         \n   \n  </Container>\n</Navbar>\n<Dashboard></Dashboard>\n</div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}